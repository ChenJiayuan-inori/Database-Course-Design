{"ast":null,"code":"export default {\n  //接收info组件中传来的参数，点击跳转单词详情页面，根据id查询\n  props: [\"id\"],\n  data() {\n    return {\n      targetId: this.id,\n      detail: {},\n      temp: [],\n      dialogFormVisible: false,\n      form: {\n        word: \"\",\n        meaning: \"\",\n        description: \"\",\n        example: \"\",\n        classes: 0,\n        type: 0\n      },\n      formLabelWidth: \"120px\"\n    };\n  },\n  methods: {\n    initDetail() {\n      this.$axios.get(\"/backpage/selectById\", {\n        params: {\n          id: this.targetId\n        }\n      }).then(res => {\n        console.log(res);\n        this.detail = res.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    deleteWord() {\n      var reset_id;\n      var that = this;\n      this.$confirm(\"Do you really want to delete this word?\", {\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        type: \"warning\",\n        center: true\n      }).then(() => {\n        //踩坑日志，这里一开始只是使用异步请求发送信息，但是没有考虑emit和异步请求完成的前后\n        //导致一个问题，emit调用的父组件方法先被执行了，异步请求才拿到后端的响应数据\n        //要注意两个异步请求的执行顺序，将第二个放到then之后执行，且调用emit时要使用nextTick进行控制\n        //这样完成本次的请求处理\n        this.$axios.delete(\"/backpage/deleteById\", {\n          params: {\n            id: this.targetId\n          }\n        }).then(res => {\n          console.log(res.data);\n          console.log(\"已经执行了删除\");\n          that.$message({\n            type: \"success\",\n            message: \"Successfully Delete!\"\n          });\n          this.$nextTick(() => {\n            this.$axios.get(\"/backpage/info\").then(res => {\n              this.temp = res.data.data;\n              reset_id = this.temp[0].id;\n              console.log(\"reset的id为\" + reset_id);\n              this.$nextTick(() => {\n                this.$emit(\"defaultId\", reset_id);\n                console.log(\"已经执行了reset\");\n                this.$emit(\"Reset\");\n                console.log(\"已经执行完毕\");\n              });\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    update() {\n      this.$msgbox({\n        title: \"Update Word\",\n        message: h(\"div\", {\n          attrs: {\n            class: \"el-textarea\"\n          }\n        }, [h(\"textarea\", {\n          attrs: {\n            class: \"el-textarea__inner\",\n            autocomplete: \"off\",\n            rows: 4\n          },\n          value: _this.commentContent\n        })]),\n        showCancelButton: true,\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\"\n      });\n    }\n  },\n  mounted() {\n    this.initDetail();\n  }\n};","map":{"version":3,"names":["props","data","targetId","id","detail","temp","dialogFormVisible","form","word","meaning","description","example","classes","type","formLabelWidth","methods","initDetail","$axios","get","params","then","res","console","log","catch","error","deleteWord","reset_id","that","$confirm","confirmButtonText","cancelButtonText","center","delete","$message","message","$nextTick","$emit","update","$msgbox","title","h","attrs","class","autocomplete","rows","value","_this","commentContent","showCancelButton","mounted"],"sources":["src/components/Details.vue"],"sourcesContent":["<template>\r\n    <div class=\"details-body\">\r\n        <div class=\"details\">\r\n            <div class=\"detail-head\">\r\n                <div>\r\n                    <h1>{{ detail.word }}</h1>\r\n                    <div>\r\n                        <p>词性:{{ detail.classes }}</p>\r\n                        <p>类别:{{ detail.type }}</p>\r\n                    </div>\r\n                </div>\r\n                <i id=\"queriesTimes\">已查询次数:{{ detail.queriesTimes }}</i>\r\n                <!-- <i id=\"isCollect\" class=\"el-icon-star-off\" @click=\"collect\"></i> -->\r\n            </div>\r\n\r\n            <div class=\"detail-body\">\r\n                <table>\r\n                    <tr class=\"row\">\r\n                        <td class=\"column\">meaning:</td>\r\n                        <td class=\"detail-column\">{{ detail.meaning }}</td>\r\n                    </tr>\r\n                    <tr class=\"row\">\r\n                        <td class=\"column\">description:</td>\r\n                        <td class=\"detail-column\">{{ detail.description }}</td>\r\n                    </tr>\r\n                    <tr class=\"row\">\r\n                        <td class=\"column\">example:</td>\r\n                        <td class=\"detail-column\">{{ detail.example }}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"detail-foot\">\r\n                <!-- <div class=\"closeBtn\" @click=\"closeBtn\"></div> -->\r\n                <el-button class=\"closeBtn\" type=\"text\" @click=\"dialogFormVisible = true\"\r\n                    >edit</el-button\r\n                >\r\n                <div class=\"closeBtn\" @click=\"deleteWord\">delete</div>\r\n            </div>\r\n        </div>\r\n\r\n        <el-dialog title=\"Update Word\" :visible.sync=\"dialogFormVisible\">\r\n            <el-form :model=\"form\">\r\n                <el-form-item label=\"Word\" :label-width=\"formLabelWidth\">\r\n                    <el-input\r\n                        v-model=\"form.word\"\r\n                        auto-complete=\"off\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"Meaning\" :label-width=\"formLabelWidth\">\r\n                    <el-input\r\n                        v-model=\"form.meaning\"\r\n                        auto-complete=\"off\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"Description\" :label-width=\"formLabelWidth\">\r\n                    <el-input\r\n                        v-model=\"form.description\"\r\n                        type=\"textarea\"\r\n                        :rows=\"2\"\r\n                        placeholder=\"请输入内容\"\r\n                        auto-complete=\"off\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"Example\" :label-width=\"formLabelWidth\">\r\n                    <el-input\r\n                        type=\"textarea\"\r\n                        :rows=\"2\"\r\n                        placeholder=\"请输入内容\"\r\n                        v-model=\"form.example\"\r\n                        auto-complete=\"off\"\r\n                    ></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"活动区域\" :label-width=\"formLabelWidth\">\r\n                    <el-select\r\n                        v-model=\"form.classes\"\r\n                        placeholder=\"请选择活动区域\"\r\n                    >\r\n                        <el-option label=\"区域一\" value=\"shanghai\"></el-option>\r\n                        <el-option label=\"区域二\" value=\"beijing\"></el-option>\r\n                        <el-option label=\"区域一\" value=\"shanghai\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"dialogFormVisible = false\"\r\n                    >确 定</el-button\r\n                >\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    //接收info组件中传来的参数，点击跳转单词详情页面，根据id查询\r\n    props: [\"id\"],\r\n\r\n    data() {\r\n        return {\r\n            targetId: this.id,\r\n            detail: {},\r\n            temp: [],\r\n            dialogFormVisible: false,\r\n            form: {\r\n                word: \"\",\r\n                meaning: \"\",\r\n                description: \"\",\r\n                example: \"\",\r\n                classes: 0,\r\n                type: 0,\r\n            },\r\n            formLabelWidth: \"120px\",\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        initDetail() {\r\n            this.$axios\r\n                .get(\"/backpage/selectById\", {\r\n                    params: {\r\n                        id: this.targetId,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    this.detail = res.data.data;\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        deleteWord() {\r\n            var reset_id;\r\n            var that = this;\r\n            this.$confirm(\"Do you really want to delete this word?\", {\r\n                confirmButtonText: \"Yes\",\r\n                cancelButtonText: \"No\",\r\n                type: \"warning\",\r\n                center: true,\r\n            })\r\n                .then(() => {\r\n                    //踩坑日志，这里一开始只是使用异步请求发送信息，但是没有考虑emit和异步请求完成的前后\r\n                    //导致一个问题，emit调用的父组件方法先被执行了，异步请求才拿到后端的响应数据\r\n                    //要注意两个异步请求的执行顺序，将第二个放到then之后执行，且调用emit时要使用nextTick进行控制\r\n                    //这样完成本次的请求处理\r\n                    this.$axios\r\n                        .delete(\"/backpage/deleteById\", {\r\n                            params: {\r\n                                id: this.targetId,\r\n                            },\r\n                        })\r\n                        .then((res) => {\r\n                            console.log(res.data);\r\n                            console.log(\"已经执行了删除\");\r\n                            that.$message({\r\n                                type: \"success\",\r\n                                message: \"Successfully Delete!\",\r\n                            });\r\n                            this.$nextTick(() => {\r\n                                this.$axios\r\n                                    .get(\"/backpage/info\")\r\n                                    .then((res) => {\r\n                                        this.temp = res.data.data;\r\n                                        reset_id = this.temp[0].id;\r\n                                        console.log(\"reset的id为\" + reset_id);\r\n                                        this.$nextTick(() => {\r\n                                            this.$emit(\"defaultId\", reset_id);\r\n                                            console.log(\"已经执行了reset\");\r\n                                            this.$emit(\"Reset\");\r\n                                            console.log(\"已经执行完毕\");\r\n                                        });\r\n                                    });\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        update() {\r\n            this.$msgbox({\r\n                title: \"Update Word\",\r\n                message: h(\r\n                    \"div\",\r\n                    {\r\n                        attrs: {\r\n                            class: \"el-textarea\",\r\n                        },\r\n                    },\r\n                    [\r\n                        h(\"textarea\", {\r\n                            attrs: {\r\n                                class: \"el-textarea__inner\",\r\n                                autocomplete: \"off\",\r\n                                rows: 4,\r\n                            },\r\n                            value: _this.commentContent,\r\n                        }),\r\n                    ]\r\n                ),\r\n                showCancelButton: true,\r\n                confirmButtonText: \"确定\",\r\n                cancelButtonText: \"取消\",\r\n            });\r\n        },\r\n    },\r\n\r\n    mounted() {\r\n        this.initDetail();\r\n    },\r\n};\r\n</script>\r\n\r\n<style src='../../public/css/details.css' scoped></style>"],"mappings":"AA+FA;EACA;EACAA,KAAA;EAEAC,KAAA;IACA;MACAC,QAAA,OAAAC,EAAA;MACAC,MAAA;MACAC,IAAA;MACAC,iBAAA;MACAC,IAAA;QACAC,IAAA;QACAC,OAAA;QACAC,WAAA;QACAC,OAAA;QACAC,OAAA;QACAC,IAAA;MACA;MACAC,cAAA;IACA;EACA;EAEAC,OAAA;IACAC,WAAA;MACA,KAAAC,MAAA,CACAC,GAAA;QACAC,MAAA;UACAhB,EAAA,OAAAD;QACA;MACA,GACAkB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,KAAAjB,MAAA,GAAAiB,GAAA,CAAApB,IAAA,CAAAA,IAAA;MACA,GACAuB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;MACA;IACA;IAEAC,WAAA;MACA,IAAAC,QAAA;MACA,IAAAC,IAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAlB,IAAA;QACAmB,MAAA;MACA,GACAZ,IAAA;QACA;QACA;QACA;QACA;QACA,KAAAH,MAAA,CACAgB,MAAA;UACAd,MAAA;YACAhB,EAAA,OAAAD;UACA;QACA,GACAkB,IAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAApB,IAAA;UACAqB,OAAA,CAAAC,GAAA;UACAK,IAAA,CAAAM,QAAA;YACArB,IAAA;YACAsB,OAAA;UACA;UACA,KAAAC,SAAA;YACA,KAAAnB,MAAA,CACAC,GAAA,mBACAE,IAAA,CAAAC,GAAA;cACA,KAAAhB,IAAA,GAAAgB,GAAA,CAAApB,IAAA,CAAAA,IAAA;cACA0B,QAAA,QAAAtB,IAAA,IAAAF,EAAA;cACAmB,OAAA,CAAAC,GAAA,eAAAI,QAAA;cACA,KAAAS,SAAA;gBACA,KAAAC,KAAA,cAAAV,QAAA;gBACAL,OAAA,CAAAC,GAAA;gBACA,KAAAc,KAAA;gBACAf,OAAA,CAAAC,GAAA;cACA;YACA;UACA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;QACA;MACA,GACAD,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;MACA;IACA;IAEAa,OAAA;MACA,KAAAC,OAAA;QACAC,KAAA;QACAL,OAAA,EAAAM,CAAA,CACA,OACA;UACAC,KAAA;YACAC,KAAA;UACA;QACA,GACA,CACAF,CAAA;UACAC,KAAA;YACAC,KAAA;YACAC,YAAA;YACAC,IAAA;UACA;UACAC,KAAA,EAAAC,KAAA,CAAAC;QACA,GAEA;QACAC,gBAAA;QACAnB,iBAAA;QACAC,gBAAA;MACA;IACA;EACA;EAEAmB,QAAA;IACA,KAAAlC,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}