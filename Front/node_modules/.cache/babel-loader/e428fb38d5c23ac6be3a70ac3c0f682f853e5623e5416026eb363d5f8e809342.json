{"ast":null,"code":"export default {\n  data() {\n    return {\n      search: '',\n      words: [{\n        word: \"string\",\n        classes: \"n\",\n        type: 201,\n        meaning: \"a string\"\n      }]\n    };\n  },\n  methods: {\n    loadInfo() {\n      this.$axios.get(\"/front/info\").then(res => {\n        //ajax返回值赋值给 data中list\n        console.log(res);\n        this.words = res.data.data;\n\n        //踩坑日记\n        //emit调用返回的是一个this对象，拿不到值的，必须在父组件里定义回调函数，才能将值传到子组件中\n        //这里定义回调函数将父组件中的id_flag传过来，用于判断是否为初次渲染，初次渲染时返回给组件当前列表第一的id\n        //此后不再将列表第一的id返回，要想拿到新的detail必须点击列表具体项\n        //此后每次只调用redir函数去重定位最后一次被选中的项，并同步到父组件中去，不再改变\n\n        var is_flag;\n        this.$emit(\"idFlagStatus\", isflag => {\n          is_flag = isflag;\n        });\n        if (is_flag) {\n          console.log(is_flag);\n          this.$emit(\"defaultId\", this.words[0].id);\n        }\n      });\n    },\n    search() {\n      this.$axios.get(\"/front/search\", {\n        params: {\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        this.words = res.data.data;\n        console.log(this.words);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  mounted() {\n    this.loadInfo();\n  }\n};","map":{"version":3,"names":["data","search","words","word","classes","type","meaning","methods","loadInfo","$axios","get","then","res","console","log","is_flag","$emit","isflag","id","params","catch","error","mounted"],"sources":["src/views/FrontPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"body\">\r\n        <img class=\"logo\" src=\"../../public/img/logo.png\"> \r\n        <div class=\"table\">\r\n            <section class=\"header\">\r\n                <h1>Words List</h1>\r\n                <div class=\"input-group\">\r\n                    <input type=\"search\" v-model=\"search\" placeholder=\"Search Data...\" />\r\n                    <i class=\"el-icon-search\" @click=\"search()\"></i>\r\n                </div>\r\n            </section>\r\n            <section class=\"shell\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th id=\"word\">word</th>\r\n                            <th id=\"classes\">classes</th>\r\n                            <th id=\"type\">type</th>\r\n                            <th id=\"meaning\">meaning</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"word in words\" :key=\"word.id\">\r\n                            <td>{{ word.word }}</td>\r\n                            <td>{{ word.classes }}</td>\r\n                            <td>{{ word.type }}</td>\r\n                            <td>{{ word.meaning }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            search: '',\r\n            words: [\r\n                {\r\n                    word: \"string\",\r\n                    classes: \"n\",\r\n                    type: 201,\r\n                    meaning: \"a string\",\r\n                },\r\n            ],\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        loadInfo() {\r\n            this.$axios.get(\"/front/info\").then((res) => {\r\n                //ajax返回值赋值给 data中list\r\n                console.log(res);\r\n                this.words = res.data.data;\r\n\r\n                //踩坑日记\r\n                //emit调用返回的是一个this对象，拿不到值的，必须在父组件里定义回调函数，才能将值传到子组件中\r\n                //这里定义回调函数将父组件中的id_flag传过来，用于判断是否为初次渲染，初次渲染时返回给组件当前列表第一的id\r\n                //此后不再将列表第一的id返回，要想拿到新的detail必须点击列表具体项\r\n                //此后每次只调用redir函数去重定位最后一次被选中的项，并同步到父组件中去，不再改变\r\n\r\n                var is_flag;\r\n                this.$emit(\"idFlagStatus\", (isflag) => {\r\n                    is_flag = isflag;\r\n                });\r\n                if (is_flag) {\r\n                    console.log(is_flag);\r\n                    this.$emit(\"defaultId\", this.words[0].id);\r\n                }\r\n            });\r\n        },\r\n\r\n        search() {\r\n            this.$axios.get(\"/front/search\",{\r\n                params: {\r\n                    search: this.search\r\n                }\r\n            }).then((res) => {\r\n                console.log(res)\r\n                this.words = res.data.data\r\n                console.log(this.words)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n    },\r\n\r\n\r\n    mounted() {\r\n        this.loadInfo();\r\n    },\r\n};\r\n</script>\r\n\r\n<style src='../../public/css/base.css'  scoped></style>\r\n<style src='../../public/css/frontpage.css' scoped></style>"],"mappings":"AAoCA;EACAA,KAAA;IACA;MACAC,MAAA;MACAC,KAAA,GACA;QACAC,IAAA;QACAC,OAAA;QACAC,IAAA;QACAC,OAAA;MACA;IAEA;EACA;EAEAC,OAAA;IACAC,SAAA;MACA,KAAAC,MAAA,CAAAC,GAAA,gBAAAC,IAAA,CAAAC,GAAA;QACA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,KAAAV,KAAA,GAAAU,GAAA,CAAAZ,IAAA,CAAAA,IAAA;;QAEA;QACA;QACA;QACA;QACA;;QAEA,IAAAe,OAAA;QACA,KAAAC,KAAA,iBAAAC,MAAA;UACAF,OAAA,GAAAE,MAAA;QACA;QACA,IAAAF,OAAA;UACAF,OAAA,CAAAC,GAAA,CAAAC,OAAA;UACA,KAAAC,KAAA,mBAAAd,KAAA,IAAAgB,EAAA;QACA;MACA;IACA;IAEAjB,OAAA;MACA,KAAAQ,MAAA,CAAAC,GAAA;QACAS,MAAA;UACAlB,MAAA,OAAAA;QACA;MACA,GAAAU,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,KAAAV,KAAA,GAAAU,GAAA,CAAAZ,IAAA,CAAAA,IAAA;QACAa,OAAA,CAAAC,GAAA,MAAAZ,KAAA;MACA,GAAAkB,KAAA,CAAAC,KAAA;QACAR,OAAA,CAAAC,GAAA,CAAAO,KAAA;MACA;IACA;EACA;EAGAC,QAAA;IACA,KAAAd,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}