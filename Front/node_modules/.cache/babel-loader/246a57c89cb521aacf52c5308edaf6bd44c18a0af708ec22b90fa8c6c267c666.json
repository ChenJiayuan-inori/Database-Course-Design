{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      search: \"\",\n      showDetail: false,\n      detail: {},\n      words: []\n    };\n  },\n  methods: {\n    loadInfo() {\n      this.$axios.get(\"/front/info\").then(res => {\n        console.log(res);\n        this.words = res.data.data;\n\n        //踩坑日记\n        //emit调用返回的是一个this对象，拿不到值的，必须在父组件里定义回调函数，才能将值传到子组件中\n        //这里定义回调函数将父组件中的id_flag传过来，用于判断是否为初次渲染，初次渲染时返回给组件当前列表第一的id\n        //此后不再将列表第一的id返回，要想拿到新的detail必须点击列表具体项\n        //此后每次只调用redir函数去重定位最后一次被选中的项，并同步到父组件中去，不再改变\n\n        var is_flag;\n        this.$emit(\"idFlagStatus\", isflag => {\n          is_flag = isflag;\n        });\n        if (is_flag) {\n          console.log(is_flag);\n          this.$emit(\"defaultId\", this.words[0].id);\n        }\n      });\n    },\n    searchBtn() {\n      this.$axios.get(\"/front/search\", {\n        params: {\n          search: this.search\n        }\n      }).then(res => {\n        console.log(res);\n        this.words = res.data.data;\n        console.log(this.words);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    detailBtn(id) {\n      this.showDetail = true;\n      const user_id = String(window.localStorage.getItem(\"Token\"));\n      this.$axios.get(\"/front/detail\", {\n        params: {\n          id: id\n        }\n      }).then(res => {\n        this.detail = res.data.data;\n        this.$axios.get(\"/front/isCollected\", {\n          params: {\n            wordId: id,\n            user: user_id\n          }\n        }).then(res => {\n          console.log(\"检查收藏的结果为\" + res.data.data);\n          if (res.data.data != null) {\n            document.getElementById(\"isCollect\").className = \"el-icon-star-on\";\n          } else {\n            document.getElementById(\"isCollect\").className = \"el-icon-star-off\";\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    closeBtn() {\n      this.showDetail = false;\n    },\n    collect(word_id) {\n      if (document.getElementById(\"isCollect\").className === \"el-icon-star-off\") {\n        var that = this;\n        const user_id = String(window.localStorage.getItem(\"Token\"));\n        console.log(\"word_id是\" + word_id);\n        console.log(\"user_id是\" + user_id);\n        document.getElementById(\"isCollect\").className = \"el-icon-star-on\";\n        this.$axios.get(\"/front/addColletion\", {\n          params: {\n            id: word_id,\n            user: user_id\n          }\n        }).then(res => {\n          console.log(res);\n          that.$message({\n            type: \"success\",\n            message: \"successfully collectd!\"\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        const user_id = String(window.localStorage.getItem(\"Token\"));\n        console.log(\"word_id是\" + word_id);\n        console.log(\"user_id是\" + user_id);\n        document.getElementById(\"isCollect\").className = \"el-icon-star-off\";\n        this.$axios.get(\"/front/deleteColletion\", {\n          params: {\n            id: word_id,\n            user: user_id\n          }\n        }).then(res => {\n          console.log(res);\n          that.$message({\n            type: \"success\",\n            message: \"successfully discollectd!\"\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n    justInfo() {\n      this.$notify({\n        title: \"提示\",\n        message: \"你可以通过点击标题的“Word List”或者“Collection”来切换词表和收藏夹\",\n        duration: 0\n      });\n    },\n    logOut() {\n      this.$confirm(\"Do you really want to exit? You must login again if you want back to this page\", \"Log Out\", {\n        confirmButtonText: \"Yes\",\n        cancelButtonText: \"No\",\n        type: \"warning\",\n        center: true\n      }).then(() => {\n        localStorage.removeItem(\"Token\");\n        this.$router.push(\"/login\");\n        this.$message({\n          type: \"success\",\n          message: \"You have exited.\"\n        });\n      });\n    },\n    toListOrCollection() {\n      if (document.getElementById(\"transfer\").innerHTML === \"Words List\") {\n        document.getElementById(\"transfer\").innerHTML = \"Collection\";\n        const user_id = String(window.localStorage.getItem(\"Token\"));\n        this.$axios.get(\"/front/getCollection\", {\n          params: {\n            user: user_id\n          }\n        }).then(res => {\n          console.log(\"收藏夹的结果为\" + res.data.data);\n          this.words = res.data.data;\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        document.getElementById(\"transfer\").innerHTML = \"Words List\";\n        this.$axios.get(\"/front/info\").then(res => {\n          console.log(\"info的数据\" + res.data.data);\n          this.words = res.data.data;\n        });\n      }\n    }\n  },\n  mounted() {\n    this.loadInfo();\n    this.justInfo();\n  }\n};","map":{"version":3,"names":["axios","data","search","showDetail","detail","words","methods","loadInfo","$axios","get","then","res","console","log","is_flag","$emit","isflag","id","searchBtn","params","catch","error","detailBtn","user_id","String","window","localStorage","getItem","wordId","user","document","getElementById","className","closeBtn","collect","word_id","that","$message","type","message","justInfo","$notify","title","duration","logOut","$confirm","confirmButtonText","cancelButtonText","center","removeItem","$router","push","toListOrCollection","innerHTML","mounted"],"sources":["src/views/FrontPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"body\">\r\n        <el-button class=\"logOut\" @click=\"logOut\" type=\"primary\" round\r\n            >Log Out</el-button\r\n        >\r\n        <img class=\"logo\" src=\"../../public/img/logo.png\" />\r\n        <div class=\"table\" id=\"table\" v-loading=\"loading\">\r\n            <section class=\"header\">\r\n                <div @click=\"toListOrCollection\">\r\n                    <h1 id=\"transfer\">Words List</h1>\r\n                </div>\r\n                <div class=\"input-group\">\r\n                    <input\r\n                        type=\"search\"\r\n                        v-model=\"search\"\r\n                        placeholder=\"Search Data...\"\r\n                    />\r\n                    <i class=\"el-icon-search\" @click=\"searchBtn\"></i>\r\n                </div>\r\n            </section>\r\n            <section class=\"shell\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th id=\"word\">word</th>\r\n                            <th id=\"classes\">classes</th>\r\n                            <th id=\"type\">type</th>\r\n                            <th id=\"meaning\">meaning</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr\r\n                            v-for=\"word in words\"\r\n                            :key=\"word.id\"\r\n                            @click=\"detailBtn(word.id)\"\r\n                        >\r\n                            <td id=\"td\">{{ word.word }}</td>\r\n                            <td id=\"td\">{{ word.classes }}</td>\r\n                            <td id=\"td\">{{ word.type }}</td>\r\n                            <td id=\"td\">{{ word.meaning }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n        <div class=\"detail\" v-if=\"showDetail\">\r\n            <div class=\"detail-head\">\r\n                <div>\r\n                    <h1>{{ detail.word }}</h1>\r\n                    <div>\r\n                        <p>词性:{{ detail.classes }}</p>\r\n                        <p>类别:{{ detail.type }}</p>\r\n                    </div>\r\n                </div>\r\n                <i id=\"queriesTimes\">已查询次数:{{ detail.queriesTimes }}</i>\r\n                <i\r\n                    id=\"isCollect\"\r\n                    class=\"el-icon-star-off\"\r\n                    @click=\"collect(detail.id)\"\r\n                ></i>\r\n            </div>\r\n\r\n            <div class=\"detail-body\">\r\n                <table>\r\n                    <tr class=\"row\">\r\n                        <td class=\"column\">meaning:</td>\r\n                        <td class=\"detail-column\">{{ detail.meaning }}</td>\r\n                    </tr>\r\n                    <tr class=\"row\">\r\n                        <td class=\"column\">description:</td>\r\n                        <td class=\"detail-column\">{{ detail.description }}</td>\r\n                    </tr>\r\n                    <tr class=\"row\">\r\n                        <td class=\"column\">example:</td>\r\n                        <td class=\"detail-column\">{{ detail.example }}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"detail-foot\">\r\n                <div class=\"closeBtn\" @click=\"closeBtn\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            search: \"\",\r\n            showDetail: false,\r\n            detail: {},\r\n            words: [],\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        loadInfo() {\r\n            this.$axios.get(\"/front/info\").then((res) => {\r\n                console.log(res);\r\n                this.words = res.data.data;\r\n\r\n                //踩坑日记\r\n                //emit调用返回的是一个this对象，拿不到值的，必须在父组件里定义回调函数，才能将值传到子组件中\r\n                //这里定义回调函数将父组件中的id_flag传过来，用于判断是否为初次渲染，初次渲染时返回给组件当前列表第一的id\r\n                //此后不再将列表第一的id返回，要想拿到新的detail必须点击列表具体项\r\n                //此后每次只调用redir函数去重定位最后一次被选中的项，并同步到父组件中去，不再改变\r\n\r\n                var is_flag;\r\n                this.$emit(\"idFlagStatus\", (isflag) => {\r\n                    is_flag = isflag;\r\n                });\r\n                if (is_flag) {\r\n                    console.log(is_flag);\r\n                    this.$emit(\"defaultId\", this.words[0].id);\r\n                }\r\n            });\r\n        },\r\n\r\n        searchBtn() {\r\n            this.$axios\r\n                .get(\"/front/search\", {\r\n                    params: {\r\n                        search: this.search,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    this.words = res.data.data;\r\n                    console.log(this.words);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        detailBtn(id) {\r\n            this.showDetail = true;\r\n            const user_id = String(window.localStorage.getItem(\"Token\"));\r\n            this.$axios\r\n                .get(\"/front/detail\", {\r\n                    params: {\r\n                        id: id,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    this.detail = res.data.data;\r\n\r\n                    this.$axios\r\n                        .get(\"/front/isCollected\", {\r\n                            params: {\r\n                                wordId: id,\r\n                                user: user_id,\r\n                            },\r\n                        })\r\n                        .then((res) => {\r\n                            console.log(\"检查收藏的结果为\" + res.data.data);\r\n                            if (res.data.data != null) {\r\n                                document.getElementById(\"isCollect\").className =\r\n                                    \"el-icon-star-on\";\r\n                            } else {\r\n                                document.getElementById(\"isCollect\").className =\r\n                                    \"el-icon-star-off\";\r\n                            }\r\n                        });\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        closeBtn() {\r\n            this.showDetail = false;\r\n        },\r\n\r\n        collect(word_id) {\r\n            if (\r\n                document.getElementById(\"isCollect\").className ===\r\n                \"el-icon-star-off\"\r\n            ) {\r\n                var that = this\r\n                const user_id = String(window.localStorage.getItem(\"Token\"));\r\n                console.log(\"word_id是\" + word_id);\r\n                console.log(\"user_id是\" + user_id);\r\n                document.getElementById(\"isCollect\").className =\r\n                    \"el-icon-star-on\";\r\n                this.$axios\r\n                    .get(\"/front/addColletion\", {\r\n                        params: {\r\n                            id: word_id,\r\n                            user: user_id,\r\n                        },\r\n                    })\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                        that.$message({\r\n                            type: \"success\",\r\n                            message: \"successfully collectd!\",\r\n                        });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            } else {\r\n                const user_id = String(window.localStorage.getItem(\"Token\"));\r\n                console.log(\"word_id是\" + word_id);\r\n                console.log(\"user_id是\" + user_id);\r\n                document.getElementById(\"isCollect\").className =\r\n                    \"el-icon-star-off\";\r\n                this.$axios\r\n                    .get(\"/front/deleteColletion\", {\r\n                        params: {\r\n                            id: word_id,\r\n                            user: user_id,\r\n                        },\r\n                    })\r\n                    .then((res) => {\r\n                        console.log(res);\r\n                        that.$message({\r\n                            type: \"success\",\r\n                            message: \"successfully discollectd!\",\r\n                        });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n        },\r\n\r\n        justInfo() {\r\n            this.$notify({\r\n                title: \"提示\",\r\n                message:\r\n                    \"你可以通过点击标题的“Word List”或者“Collection”来切换词表和收藏夹\",\r\n                duration: 0,\r\n            });\r\n        },\r\n\r\n        logOut() {\r\n            this.$confirm(\r\n                \"Do you really want to exit? You must login again if you want back to this page\",\r\n                \"Log Out\",\r\n                {\r\n                    confirmButtonText: \"Yes\",\r\n                    cancelButtonText: \"No\",\r\n                    type: \"warning\",\r\n                    center: true,\r\n                }\r\n            ).then(() => {\r\n                localStorage.removeItem(\"Token\");\r\n                this.$router.push(\"/login\");\r\n                this.$message({\r\n                    type: \"success\",\r\n                    message: \"You have exited.\",\r\n                });\r\n            });\r\n        },\r\n\r\n        toListOrCollection() {\r\n            if (\r\n                document.getElementById(\"transfer\").innerHTML === \"Words List\"\r\n            ) {\r\n                document.getElementById(\"transfer\").innerHTML = \"Collection\";\r\n                const user_id = String(window.localStorage.getItem(\"Token\"));\r\n\r\n                this.$axios\r\n                    .get(\"/front/getCollection\", {\r\n                        params: {\r\n                            user: user_id,\r\n                        },\r\n                    })\r\n                    .then((res) => {\r\n                        console.log(\"收藏夹的结果为\" + res.data.data);\r\n                        this.words = res.data.data;\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            } else {\r\n                document.getElementById(\"transfer\").innerHTML = \"Words List\";\r\n\r\n                this.$axios.get(\"/front/info\").then((res) => {\r\n                    console.log(\"info的数据\" + res.data.data);\r\n                    this.words = res.data.data;\r\n                });\r\n            }\r\n        },\r\n    },\r\n\r\n    mounted() {\r\n        this.loadInfo();\r\n        this.justInfo();\r\n    },\r\n};\r\n</script>\r\n\r\n<style src='../../public/css/base.css'  scoped></style>\r\n<style src='../../public/css/frontpage.css' scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}